---
import type { HTMLAttributes } from 'astro/types';
import type { Lang } from '@src/i18n/index';

type Props = HTMLAttributes<'a'> & { lang?: Lang };

const { href, class: className, lang = 'es', ...props } = Astro.props;

const { pathname } = Astro.url;

// Clean up paths for comparison - remove trailing slashes
const hrefString = typeof href === 'string' ? href : href?.toString() || '';
const cleanHref = hrefString.replace(/\/$/, '');
const cleanPathname = pathname.replace(/\/$/, '');

// Check if the current path matches the link
const isActive = cleanHref === cleanPathname || (cleanHref !== '' && cleanPathname.startsWith(cleanHref));
---

<a
	href={href}
	class:list={[className, { 'border-b border-zinc-500 dark:border-zinc-300': isActive }, { 'text-zinc-600 dark:text-zinc-200 hover:text-zinc-900 dark:hover:text-zinc-50': !isActive }, { 'text-zinc-950 dark:text-zinc-50': isActive }]}
	{...props}
>
	<slot />
</a>
